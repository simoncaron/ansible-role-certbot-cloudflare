---
# Certbot auto-renew cron job configuration (for certificate renewals).
certbot_auto_renew: true
certbot_auto_renew_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
certbot_auto_renew_hour: "3"
certbot_auto_renew_minute: "30"
certbot_auto_renew_options: "--quiet"

certbot_testmode: false
certbot_hsts: false


# Parameters used when creating new Certbot certs.
certbot_create_if_missing: false
certbot_create_extra_args: ""
certbot_admin_email: email@example.com
certbot_expand: false

# Cloudflare DNS credentials (use either API token OR email+api_key)
certbot_cloudflare_email: ""
certbot_cloudflare_api_key: ""
certbot_cloudflare_api_token: ""
certbot_cloudflare_propagation_seconds: 60


certbot_certs: []
# - name: example.com
#   email: janedoe@example.com
#   domains:
#     - example1.com
#     - example2.com
# - domains:
#     - example3.com

certbot_create_command: >-
  {{ certbot_script }} certonly --dns-cloudflare
  {{ '--hsts' if certbot_hsts else '' }}
  {{ '--test-cert' if certbot_testmode else '' }}
  --noninteractive --agree-tos
  --email {{ cert_item.email | default(certbot_admin_email) }}
  {{ '--expand' if certbot_expand else '' }}
  --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini
  --dns-cloudflare-propagation-seconds {{ certbot_cloudflare_propagation_seconds }}
  {{ certbot_create_extra_args }}
  --cert-name {{ cert_item_name }}
  -d {{ cert_item.domains | join(',') }}
  {{ "--deploy-hook '" ~ cert_item.deploy_hook ~ "'"
    if 'deploy_hook' in cert_item
  else '' }}

certbot_create_stop_services: []
  # - nginx
  # - apache
  # - varnish

# Available options: 'package', 'snap'.
certbot_install_method: 'package'
